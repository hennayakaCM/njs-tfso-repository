{"version":3,"file":"literalexpression.js","sourceRoot":"","sources":["literalexpression.ts"],"names":[],"mappings":";AAAA,6BAAwD,cAAc,CAAC,CAAA;AAMvE,gCAAuC,uBAAU;IAC7C,YAAmB,KAAU;QACzB,MAAM,2BAAc,CAAC,OAAO,CAAC,CAAC;QADf,UAAK,GAAL,KAAK,CAAK;IAE7B,CAAC;AACL,CAAC;AAJY,yBAAiB,oBAI7B,CAAA","sourcesContent":["import { IExpression, Expression, ExpressionType } from './expression';\r\n\r\nexport interface ILiteralExpression extends IExpression {\r\n    value: any\r\n}\r\n\r\nexport class LiteralExpression extends Expression implements ILiteralExpression {\r\n    constructor(public value: any) {\r\n        super(ExpressionType.Literal);\r\n    }\r\n}"]}