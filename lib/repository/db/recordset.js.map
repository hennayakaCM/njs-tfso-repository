{"version":3,"file":"recordset.js","sourceRoot":"","sources":["../../../src/repository/db/recordset.ts"],"names":[],"mappings":";AAOA;IACI,mBAAmB,OAAuB,EAAS,QAAoB,EAAS,aAAyB;QAA7D,wBAA2B,GAA3B,YAA2B;QAAE,6BAAgC,GAAhC,iBAAgC;QAAtF,YAAO,GAAP,OAAO,CAAgB;QAAS,aAAQ,GAAR,QAAQ,CAAY;QAAS,kBAAa,GAAb,aAAa,CAAY;IAEzG,CAAC;IAED,sBAAW,6BAAM;aAAjB;YACI,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QACjE,CAAC;;;OAAA;IACL,gBAAC;AAAD,CAAC,AARD,IAQC;AARY,iBAAS,YAQrB,CAAA","sourcesContent":["export interface IRecordSet<TEntity> {\r\n    affected: number\r\n    length: number\r\n    executionTime: number\r\n    records: TEntity[]\r\n}\r\n\r\nexport class RecordSet<TEntity> implements IRecordSet<TEntity> {\r\n    constructor(public records: Array<TEntity>, public affected: number = 0, public executionTime: number = 0) {\r\n\r\n    }\r\n\r\n    public get length() {\r\n        return Array.isArray(this.records) ? this.records.length : 0;\r\n    }\r\n}"]}